<folders xlmns="http://schemas.haulmont.com/thesis/4.0/folders.xsd">
    <folder>
        <createTs class="org.apache.openjpa.util.java$util$Date$proxy" serialization="custom">
            <date>
                <long>1589893098416</long>
            </date>
        </createTs>
        <createdBy>admin</createdBy>
        <id>3cfc9a60-ac98-11c1-ada7-7fa01eac534c</id>
        <version>1</version>
        <updateTs class="org.apache.openjpa.util.java$util$Date$proxy" serialization="custom">
            <date>
                <long>1589893098416</long>
            </date>
        </updateTs>
        <name>Заявки на покупку</name>
        <sortOrder>4</sortOrder>
    </folder>
    <folder>
        <createTs class="org.apache.openjpa.util.java$util$Date$proxy" serialization="custom">
            <date>
                <long>1589810662026</long>
            </date>
        </createTs>
        <createdBy>admin</createdBy>
        <id>be4db2b2-ccb9-3436-3a0f-0163b3b747dc</id>
        <version>1</version>
        <updateTs class="org.apache.openjpa.util.java$util$Date$proxy" serialization="custom">
            <date>
                <long>1589810662026</long>
            </date>
        </updateTs>
        <name>Назначенные</name>
        <sortOrder>2</sortOrder>
        <filterComponentId>[cars$CarPurchaseRequest.browse].genericFilter</filterComponentId>
        <filterXml>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;

            &lt;filter&gt;
            &lt;and&gt;
            &lt;c name=&quot;xVZxBACBsT&quot; unary=&quot;true&quot; hidden=&quot;true&quot; type=&quot;CUSTOM&quot;
            locCaption=&quot;PROC_FOLDER&quot;&gt;((d.proc.code = &apos;proc_20200518_134436149&apos; and (d.state like
            &apos;%,Proverka_dokumentov,%&apos; or d.state like &apos;%,Podgotovlena,%&apos; or d.state like &apos;%,Podgotovka,%&apos;
            or d.state like &apos;%,Proverka_zayavki,%&apos; or d.state like &apos;%,Canceled,%&apos; or d.state like
            &apos;%,Otkazano,%&apos; or d.state like &apos;%,Started,%&apos;))) and exists (select a from wf$Assignment
            a where a.card = d and a.user.id = :session$userId and a.finished is null)
            &lt;param name=&quot;component$genericFilter.xVZxBACBsT13577&quot;&gt;true&lt;/param&gt;
            &lt;/c&gt;
            &lt;/and&gt;
            &lt;/filter&gt;
        </filterXml>
        <applyDefault>true</applyDefault>
        <visibilityScript>import com.haulmont.cuba.core.global.UserSessionProvider
            List&lt;String&gt; roles = (List&lt;String&gt;) UserSessionProvider.getUserSession().getRoles()
            return roles.contains(&apos;Administrators&apos;) ||
            roles.contains(&apos;master&apos;) ||
            roles.contains(&apos;manager&apos;) ||
            roles.contains(&apos;bank_operator&apos;)
        </visibilityScript>
        <quantityScript>import com.haulmont.cuba.core.Locator
            import com.haulmont.cuba.core.EntityManager
            import com.haulmont.cuba.core.PersistenceProvider
            import com.haulmont.cuba.core.global.UserSessionProvider
            import com.haulmont.cuba.core.Query
            EntityManager em = PersistenceProvider.getEntityManager()
            Query q = em.createQuery(&quot;&quot;&quot;select count(d.id) from cars\$CarPurchaseRequest d
            where ((d.proc.code = &apos;proc_20200518_134436149&apos; and (d.state like &apos;%,Proverka_dokumentov,%&apos;
            or d.state like &apos;%,Podgotovlena,%&apos; or d.state like &apos;%,Podgotovka,%&apos; or d.state like
            &apos;%,Proverka_zayavki,%&apos; or d.state like &apos;%,Canceled,%&apos; or d.state like &apos;%,Otkazano,%&apos;
            or d.state like &apos;%,Started,%&apos;))) and exists (select a from wf\$Assignment a where a.card = d and
            a.user.id = :session\$userId and a.finished is null)&quot;&quot;&quot;)
            q.setParameter(&apos;session\$userId&apos;, UserSessionProvider.currentOrSubstitutedUserId())
            def result = q.getSingleResult();
            q = em.createQuery(&quot;&quot;&quot;select count(d.id) from wf\$CardInfo ci
            join ci.card d where ci.deleteTs is null and ci.user.id = :session\$userId and ((d.proc.code = &apos;proc_20200518_134436149&apos;
            and (d.state like &apos;%,Proverka_dokumentov,%&apos; or d.state like &apos;%,Podgotovlena,%&apos; or
            d.state like &apos;%,Podgotovka,%&apos; or d.state like &apos;%,Proverka_zayavki,%&apos; or d.state like
            &apos;%,Canceled,%&apos; or d.state like &apos;%,Otkazano,%&apos; or d.state like &apos;%,Started,%&apos;)))
            and exists (select a from wf\$Assignment a where a.card = d and a.user.id = :session\$userId and a.finished
            is null)&quot;&quot;&quot;)
            q.setParameter(&apos;session\$userId&apos;, UserSessionProvider.currentOrSubstitutedUserId())
            def count = q.getSingleResult()
            style = (count != null &amp;&amp; count &gt; 0) ? &apos;cardremind&apos; : null
            return result
        </quantityScript>
        <quantity>1</quantity>
        <procAppFolderXml>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;

            &lt;root&gt;
            &lt;entity&gt;cars$CarPurchaseRequest&lt;/entity&gt;
            &lt;entityAlias&gt;CPRAlias&lt;/entityAlias&gt;
            &lt;roles&gt;
            &lt;role&gt;Administrators&lt;/role&gt;
            &lt;role&gt;master&lt;/role&gt;
            &lt;role&gt;manager&lt;/role&gt;
            &lt;role&gt;bank_operator&lt;/role&gt;
            &lt;/roles&gt;
            &lt;conditions&gt;
            &lt;condition&gt;
            &lt;proc&gt;proc_20200518_134436149&lt;/proc&gt;
            &lt;inExpr&gt;true&lt;/inExpr&gt;
            &lt;states&gt;Proverka_dokumentov,Podgotovlena,Podgotovka,Proverka_zayavki,Canceled,Otkazano,Started&lt;/states&gt;
            &lt;/condition&gt;
            &lt;/conditions&gt;
            &lt;/root&gt;
        </procAppFolderXml>
        <overwriteByInit>true</overwriteByInit>
        <cardsSelectScript>import com.haulmont.cuba.core.global.AppBeans
            import com.haulmont.cuba.core.global.UserSessionSource
            import com.haulmont.thesis.core.appfolders.AppFolderCardsSelector

            def userId = AppBeans.get(UserSessionSource.class).currentOrSubstitutedUserId()
            def procStatesMap = [:]

            procStatesMap &lt;&lt; [&apos;proc_20200518_134436149&apos; : [&apos;Started&apos;,&apos;Podgotovka&apos;,&apos;Otkazano&apos;,&apos;Proverka_dokumentov&apos;,&apos;Canceled&apos;,&apos;Podgotovlena&apos;,&apos;Proverka_zayavki&apos;,]]

            return AppFolderCardsSelector.get().selectCardsByProcessAndState(&apos;cars$CarPurchaseRequest&apos;,
            userId, procStatesMap)
        </cardsSelectScript>
    </folder>
    <folder>
        <createTs class="org.apache.openjpa.util.java$util$Date$proxy" serialization="custom">
            <date>
                <long>1589809406568</long>
            </date>
        </createTs>
        <createdBy>admin</createdBy>
        <id>6522365e-5953-1353-7fd9-f9f456fed9d6</id>
        <version>2</version>
        <updateTs class="org.apache.openjpa.util.java$util$Date$proxy" serialization="custom">
            <date>
                <long>1589810185019</long>
            </date>
        </updateTs>
        <updatedBy>admin</updatedBy>
        <parent class="com.haulmont.thesis.core.entity.TsProcAppFolder">
            <detached>true</detached>
            <createTs class="org.apache.openjpa.util.java$util$Date$proxy" serialization="custom">
                <date>
                    <long>1589809368310</long>
                </date>
            </createTs>
            <createdBy>admin</createdBy>
            <id>e1841cfa-083a-792b-7732-482129ce56ee</id>
            <version>1</version>
            <updateTs class="org.apache.openjpa.util.java$util$Date$proxy" serialization="custom">
                <date>
                    <long>1589809368310</long>
                </date>
            </updateTs>
            <name>Заявки</name>
            <sortOrder>4</sortOrder>

        </parent>
        <name>Новые</name>
        <sortOrder>1</sortOrder>
        <filterComponentId>[cars$CarPurchaseRequest.browse].genericFilter</filterComponentId>
        <filterXml>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;

            &lt;filter&gt;
            &lt;and&gt;
            &lt;c name=&quot;xVZxBACBsT&quot; unary=&quot;true&quot; hidden=&quot;true&quot; type=&quot;CUSTOM&quot;
            locCaption=&quot;PROC_FOLDER&quot;&gt;((d.proc.code = &apos;proc_20200518_134436149&apos;)) and exists
            (select a from wf$Assignment a where a.card = d and a.user.id = :session$userId and a.finished is null)
            &lt;param name=&quot;component$genericFilter.xVZxBACBsT13577&quot;&gt;true&lt;/param&gt;
            &lt;/c&gt;
            &lt;/and&gt;
            &lt;/filter&gt;
        </filterXml>
        <quantity>0</quantity>
        <procAppFolderXml>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;

            &lt;root&gt;
            &lt;entity&gt;cars$CarPurchaseRequest&lt;/entity&gt;
            &lt;entityAlias&gt;CPRAlias&lt;/entityAlias&gt;
            &lt;roles&gt;
            &lt;role&gt;Administrators&lt;/role&gt;
            &lt;role&gt;Archivist&lt;/role&gt;
            &lt;role&gt;manager&lt;/role&gt;
            &lt;/roles&gt;
            &lt;conditions&gt;
            &lt;condition&gt;
            &lt;proc&gt;proc_20200518_134436149&lt;/proc&gt;
            &lt;/condition&gt;
            &lt;/conditions&gt;
            &lt;/root&gt;
        </procAppFolderXml>
    </folder>
</folders>